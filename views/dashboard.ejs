<%- include('partials/header') %>
<style>
  .space-bar {
    height: 20px;
    margin-bottom: 10px;
  }
  .space-bar.available {
    background-color: #28a745;
  }
  .space-bar.parked {
    background-color: #dc3545;
  }
  .chart-container {
    max-width: 600px;
    margin: 0 auto;
  }
</style>
<h2 class="text-center mb-4">Dashboard</h2>
<% if (error) { %>
  <div class="alert alert-danger text-center"><%= error %></div>
<% } %>
<div class="container">
  <div class="row mb-4">
    <div class="col-md-4">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">Vehicles Today</h5>
          <p class="card-text"><%= vehicles %></p>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">Earnings (<%= filter.charAt(0).toUpperCase() + filter.slice(1) %>)</h5>
          <p class="card-text text-center" id="earnings">PKR <%= (Number(earnings) || 0).toFixed(2) %></p>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">Space Usage</h5>
          <div class="space-bar available" style="width: <%= totalSpaces > 0 ? (available / totalSpaces) * 100 : 0 %>%;"></div>
          <div>Available Spaces: <%= available %></div>
          <div class="space-bar parked" style="width: <%= totalSpaces > 0 ? ((totalSpaces - available) / totalSpaces) * 100 : 0 %>%;"></div>
          <div>Used Spaces: <%= totalSpaces - available %></div>
        </div>
      </div>
    </div>
  </div>
  <div class="row mb-4">
    <div class="col-12 text-center">
      <a href="/dashboard?filter=today" class="btn btn-<%= filter === 'today' ? 'primary' : 'secondary' %> mx-2">Today</a>
      <a href="/dashboard?filter=weekly" class="btn btn-<%= filter === 'weekly' ? 'primary' : 'secondary' %> mx-2">Weekly</a>
      <a href="/dashboard?filter=monthly" class="btn btn-<%= filter === 'monthly' ? 'primary' : 'secondary' %> mx-2">Monthly</a>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6">
      <div class="chart-container">
        <canvas id="vehicleChart"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="chart-container">
        <canvas id="earningsChart"></canvas>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      const isTodayFilter = '<%= filter %>' === 'today';
      const chartType = isTodayFilter ? 'bar' : 'line';

      // Log data for debugging
      const labels = <%- JSON.stringify(chartLabels) %>;
      const vehicleData = <%- JSON.stringify(vehicleData) %>;
      const earningsData = <%- JSON.stringify(earningsData) %>;
      console.log('Chart data:', { labels, vehicleData, earningsData });

      // Ensure canvas elements exist
      const vehicleCtx = document.getElementById('vehicleChart');
      if (!vehicleCtx) {
        console.error('Vehicle chart canvas not found');
        return;
      }
      const earningsCtx = document.getElementById('earningsChart');
      if (!earningsCtx) {
        console.error('Earnings chart canvas not found');
        return;
      }

      // Vehicle Counts Chart
      new Chart(vehicleCtx.getContext('2d'), {
        type: chartType,
        data: {
          labels: labels,
          datasets: [{
            label: 'Vehicles',
            data: vehicleData,
            borderColor: '#007bff',
            backgroundColor: 'rgba(0, 123, 255, 0.3)',
            borderWidth: 2,
            fill: chartType === 'line',
            barThickness: isTodayFilter ? 40 : undefined
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: true,
              position: 'top'
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Number of Vehicles'
              },
              ticks: {
                stepSize: 1
              }
            },
            x: {
              title: {
                display: true,
                text: 'Date'
              },
              ticks: {
                autoSkip: false,
                maxRotation: 0,
                minRotation: 0
              }
            }
          }
        }
      });

      // Earnings Chart
      new Chart(earningsCtx.getContext('2d'), {
        type: chartType,
        data: {
          labels: labels,
          datasets: [{
            label: 'Earnings (PKR)',
            data: earningsData,
            borderColor: '#28a745',
            backgroundColor: 'rgba(40, 167, 69, 0.3)',
            borderWidth: 2,
            fill: chartType === 'line',
            barThickness: isTodayFilter ? 40 : undefined
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: true,
              position: 'top'
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Earnings (PKR)'
              }
            },
            x: {
              title: {
                display: true,
                text: 'Date'
              },
              ticks: {
                autoSkip: false,
                maxRotation: 0,
                minRotation: 0
              }
            }
          }
        }
      });
    } catch (error) {
      console.error('Error initializing charts:', error);
    }
  });
</script>
<%- include('partials/footer') %>